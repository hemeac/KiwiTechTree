// Kiwi's Tech Tree Overhaul (Standardized Engine Upgrades)
// Version 2.0
// Created: 2 January 2021 for KSP 1.11.1
// Last Updated: 2 January 2021
// Special Thanks to JadeofMaar and Kerbalism team, these configs would not be possible without your excellent work!


// Standard Single Fuel Engine
@PART[*]:HAS[#kiwiEngineUpgrade[tripleMode],~engineUpgrade[off]]:FOR[zzKiwiTechTree]
{	
	kerbalismReliability = true
	thrustMult = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@thrustMult /= #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	
	// Add these here without % or @ so they can be manually overriden by individual parts if required as MM should grab the first instance 
	prototypeThrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/PROTOTYPE_THRUST_MULTIPLIER$
	prototypeISPMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/PROTOTYPE_ISP_MULTIPLIER$
	prototypeCostMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/PROTOTYPE_COST_MULTIPLIER$
	prototypeMassMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/PROTOTYPE_MASS_MULTIPLIER$
	
	
	%addCost_P = #$cost$
	@addCost_P *= #$prototypeCostMultiplierConfig$
	
	%addMass_P = #$mass$
	@addMass_P *= #$prototypeMassMultiplierConfig$
	
	// Engine 0
	prototypeThrust_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@prototypeThrust_0 *= #$prototypeThrustMultiplierConfig$
		
	key0_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key0_P_0[1, ] *= #$prototypeISPMultiplierConfig$
	
	ispVac_P_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_P_0 *= #$prototypeISPMultiplierConfig$
	@ispVac_P_0 *= 10
	@ispVac_P_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_P_0 /= 10
	
	thrustVac_P_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac_P_0 *= #$prototypeThrustMultiplierConfig$
	@thrustVac_P_0 *= 10
	@thrustVac_P_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_P_0 /= 10
	
		
	// Engine 1
	prototypeThrust_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@prototypeThrust_1 *= #$prototypeThrustMultiplierConfig$
		
	key0_P_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key0_P_1[1, ] *= #$prototypeISPMultiplierConfig$
	key1_P_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key1_P_1[1, ] *= #$prototypeISPMultiplierConfig$
	key2_P_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key2_P_1[1, ] *= #$prototypeISPMultiplierConfig$
	
	ispVac_P_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_P_1 *= #$prototypeISPMultiplierConfig$
	@ispVac_P_1 *= 10
	@ispVac_P_1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_P_1 /= 10
	
	ispASL_P_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_P_1 *= #$prototypeISPMultiplierConfig$
	@ispASL_P_1 *= 10
	@ispASL_P_1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_P_1 /= 10
	
	thrustVac_P_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac_P_1 *= #$prototypeThrustMultiplierConfig$
	@thrustVac_P_1 *= 10
	@thrustVac_P_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_P_1 /= 10
	
	thrustASL_P_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL_P_1 *= #$prototypeThrustMultiplierConfig$
	@thrustASL_P_1 *= #$thrustMult$
	@thrustASL_P_1 *= 10
	@thrustASL_P_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_P_1 /= 10
	
	
	// Engine 2
	prototypeThrust_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@prototypeThrust_2 *= #$prototypeThrustMultiplierConfig$
		
	key0_P_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0$
	@key0_P_2[1, ] *= #$prototypeISPMultiplierConfig$
	key1_P_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1$
	@key1_P_2[1, ] *= #$prototypeISPMultiplierConfig$
	key2_P_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,2$
	@key2_P_2[1, ] *= #$prototypeISPMultiplierConfig$
	
	ispVac_P_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_P_2 *= #$prototypeISPMultiplierConfig$
	@ispVac_P_2 *= 10
	@ispVac_P_2 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_P_2 /= 10
	
	ispASL_P_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_P_2 *= #$prototypeISPMultiplierConfig$
	@ispASL_P_2 *= 10
	@ispASL_P_2 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_P_2 /= 10
	
	thrustVac_P_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustVac_P_2 *= #$prototypeThrustMultiplierConfig$
	@thrustVac_P_2 *= 10
	@thrustVac_P_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_P_2 /= 10
	
	thrustASL_P_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustASL_P_2 *= #$prototypeThrustMultiplierConfig$
	@thrustASL_P_2 *= #$thrustMult$
	@thrustASL_P_2 *= 10
	@thrustASL_P_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_P_2 /= 10
	
	
	//// **** BASELINE **** \\\\
	// Add these here without % or @ so they can be manually overriden by individual parts if required as MM should grab the first instance 
	baselineThrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/BASELINE_THRUST_MULTIPLIER$
	baselineISPMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/BASELINE_ISP_MULTIPLIER$
		
	%addCost_B = 0
	
	%addMass_B = 0
	
	// Engine 0
	baselineThrust_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@baselineThrust_0 *= #$baselineThrustMultiplierConfig$
		
	%key0_B_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key0_B_0[1, ] *= #$baselineISPMultiplierConfig$
		
	%ispVac_B_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_B_0 *= #$baselineISPMultiplierConfig$
	@ispVac_B_0 *= 10
	@ispVac_B_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_B_0 /= 10
	
	%thrustVac_B_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac_B_0 *= #$baselineThrustMultiplierConfig$
	@thrustVac_B_0 *= 10
	@thrustVac_B_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_B_0 /= 10
	
	
	// Engine 1
	baselineThrust_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@baselineThrust_1 *= #$baselineThrustMultiplierConfig$
		
	%key0_B_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key0_B_1[1, ] *= #$baselineISPMultiplierConfig$
	%key1_B_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key1_B_1[1, ] *= #$baselineISPMultiplierConfig$
	%key2_B_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key2_B_1[1, ] *= #$baselineISPMultiplierConfig$
	
	%ispVac_B_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_B_1 *= #$baselineISPMultiplierConfig$
	@ispVac_B_1 *= 10
	@ispVac_B_1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_B_1 /= 10
	
	%ispASL_B_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_B_1 *= #$baselineISPMultiplierConfig$
	@ispASL_B_1 *= 10
	@ispASL_B_1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_B_1 /= 10
		
	%thrustVac_B_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac_B_1 *= #$baselineThrustMultiplierConfig$
	@thrustVac_B_1 *= 10
	@thrustVac_B_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_B_1 /= 10
	
	%thrustASL_B_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL_B_1 *= #$baselineThrustMultiplierConfig$
	@thrustASL_B_1 *= #$thrustMult$
	@thrustASL_B_1 *= 10
	@thrustASL_B_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_B_1 /= 10
	
	
	// Engine 2
	baselineThrust_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@baselineThrust_2 *= #$baselineThrustMultiplierConfig$
		
	%key0_B_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0$
	@key0_B_2[1, ] *= #$baselineISPMultiplierConfig$
	%key1_B_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1$
	@key1_B_2[1, ] *= #$baselineISPMultiplierConfig$
	%key2_B_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,2$
	@key2_B_2[1, ] *= #$baselineISPMultiplierConfig$
	
	%ispVac_B_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_B_2 *= #$baselineISPMultiplierConfig$
	@ispVac_B_2 *= 10
	@ispVac_B_2 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_B_2 /= 10
	
	%ispASL_B_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_B_2 *= #$baselineISPMultiplierConfig$
	@ispASL_B_2 *= 10
	@ispASL_B_2 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_B_2 /= 10
		
	%thrustVac_B_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustVac_B_2 *= #$baselineThrustMultiplierConfig$
	@thrustVac_B_2 *= 10
	@thrustVac_B_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_B_2 /= 10
	
	%thrustASL_B_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustASL_B_2 *= #$baselineThrustMultiplierConfig$
	@thrustASL_B_2 *= #$thrustMult$
	@thrustASL_B_2 *= 10
	@thrustASL_B_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_B_2 /= 10
	
	
	//// **** UPGRADE **** \\\\
	upgradeThrustMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/UPGRADE_THRUST_MULTIPLIER$
	upgradeISPMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/UPGRADE_ISP_MULTIPLIER$
	upgradeCostMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/UPGRADE_COST_MULTIPLIER$
	upgradeMassMultiplierConfig = #$@KIWI_ENGINE_MULTIPLIERS/UPGRADE_MASS_MULTIPLIER$
	
	%addCost_U = #$cost$
	@addCost_U *= #$upgradeCostMultiplierConfig$
	
	%addMass_U = #$mass$
	@addMass_U *= #$upgradeMassMultiplierConfig$
	
	
	// Engine 0
	upgradeThrust_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@upgradeThrust_0 *= #$upgradeThrustMultiplierConfig$
		
	%key0_U_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0$
	@key0_U_0[1, ] *= #$upgradeISPMultiplierConfig$
		
	%ispVac_U_0 = #$MODULE[ModuleEngines*],0/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_U_0 *= #$upgradeISPMultiplierConfig$
	@ispVac_U_0 *= 10
	@ispVac_U_0 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_U_0 /= 10
	
	%thrustVac_U_0 = #$MODULE[ModuleEngines*],0/maxThrust$
	@thrustVac_U_0 *= #$upgradeThrustMultiplierConfig$
	@thrustVac_U_0 *= 10
	@thrustVac_U_0 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_U_0 /= 10
	
	
	// Engine 1
	upgradeThrust_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@upgradeThrust_1 *= #$upgradeThrustMultiplierConfig$
		
	%key0_U_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0$
	@key0_U_1[1, ] *= #$upgradeISPMultiplierConfig$
	%key1_U_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1$
	@key1_U_1[1, ] *= #$upgradeISPMultiplierConfig$
	%key2_U_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,2$
	@key2_U_1[1, ] *= #$upgradeISPMultiplierConfig$
	
	%ispVac_U_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_U_1 *= #$upgradeISPMultiplierConfig$
	@ispVac_U_1 *= 10
	@ispVac_U_1 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_U_1 /= 10
	
	%ispASL_U_1 = #$MODULE[ModuleEngines*],1/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_U_1 *= #$upgradeISPMultiplierConfig$
	@ispASL_U_1 *= 10
	@ispASL_U_1 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_U_1 /= 10
	
	%thrustVac_U_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustVac_U_1 *= #$upgradeThrustMultiplierConfig$
	@thrustVac_U_1 *= 10
	@thrustVac_U_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_U_1 /= 10
	
	%thrustASL_U_1 = #$MODULE[ModuleEngines*],1/maxThrust$
	@thrustASL_U_1 *= #$upgradeThrustMultiplierConfig$
	@thrustASL_U_1 *= #$thrustMult$
	@thrustASL_U_1 *= 10
	@thrustASL_U_1 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_U_1 /= 10
	
	
	// Engine 2
	upgradeThrust_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@upgradeThrust_2 *= #$upgradeThrustMultiplierConfig$
		
	%key0_U_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0$
	@key0_U_2[1, ] *= #$upgradeISPMultiplierConfig$
	%key1_U_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1$
	@key1_U_2[1, ] *= #$upgradeISPMultiplierConfig$
	%key2_U_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,2$
	@key2_U_2[1, ] *= #$upgradeISPMultiplierConfig$
	
	%ispVac_U_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,0[1, ]$ // get vac Isp number
	@ispVac_U_2 *= #$upgradeISPMultiplierConfig$
	@ispVac_U_2 *= 10
	@ispVac_U_2 ^= :\.\d+:: // Floor value to get an integer
	@ispVac_U_2 /= 10
	
	%ispASL_U_2 = #$MODULE[ModuleEngines*],2/atmosphereCurve/key,1[1, ]$ // get ASL Isp number
	@ispASL_U_2 *= #$upgradeISPMultiplierConfig$
	@ispASL_U_2 *= 10
	@ispASL_U_2 ^= :\.\d+:: // Floor value to get an integer
	@ispASL_U_2 /= 10
	
	%thrustVac_U_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustVac_U_2 *= #$upgradeThrustMultiplierConfig$
	@thrustVac_U_2 *= 10
	@thrustVac_U_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustVac_U_2 /= 10
	
	%thrustASL_U_2 = #$MODULE[ModuleEngines*],2/maxThrust$
	@thrustASL_U_2 *= #$upgradeThrustMultiplierConfig$
	@thrustASL_U_2 *= #$thrustMult$
	@thrustASL_U_2 *= 10
	@thrustASL_U_2 ^= :\.\d+:: // Floor value to get an integer
	@thrustASL_U_2 /= 10
	
	MODULE
	{
		name = ModuleB9PartSwitch
		moduleID = kiwiEngineSwitch
		switcherDescriptionPlural = #LOC_KTT_B9DESCRIPTIONPLURALS_ENGINESWITCH
		switcherDescription = #LOC_KTT_B9DESCRIPTION_ENGINESWITCH

		affectDragCubes = False
		affectFARVoxels = False
		
		SUBTYPE
	    {
			name = prototype
			title = #LOC_KTT_B9TITLE_PROTOTYPE
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL_P_2$ kN ASL / $../../thrustVac_P_2$ kN Vac.\n<b>Isp:</b> $../../ispASL_P_2$ s ASL / $../../ispVac_P_2$ s Vac.
			addedCost = #$../../addCost_P$
			addedMass = #$../../addMass_P$
			defaultSubtypePriority = 0
			primaryColor = #38FF38
			secondaryColor = #38FF38
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../prototypeThrust_0$
					atmosphereCurve
					{
						key = #$../../../../../key0_P_0$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../prototypeThrust_1$
					atmosphereCurve
					{
						key = #$../../../../../key0_P_1$
						key = #$../../../../../key1_P_1$
						key = #$../../../../../key2_P_1$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID2$
			    }

			    DATA
			    {
					maxThrust = #$../../../../prototypeThrust_2$
					atmosphereCurve
					{
						key = #$../../../../../key0_P_2$
						key = #$../../../../../key1_P_2$
						key = #$../../../../../key2_P_2$
					}
				}			    
			}
	    }
		
		SUBTYPE
	    {
			name = baseline
			title = #LOC_KTT_B9TITLE_BASELINE
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL_B_2$ kN ASL / $../../thrustVac_B_2$ kN Vac.\n<b>Isp:</b> $../../ispASL_B_2$ s ASL / $../../ispVac_B_2$ s Vac.
			addedCost = #$../../addCost_B$
			addedMass = #$../../addMass_B$
			defaultSubtypePriority = 1
			primaryColor = #00C60D
			secondaryColor = #00C60D
			upgradeRequired = #$../../kiwiEngineUpgrade0$
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../baselineThrust_0$
					atmosphereCurve
					{
						key = #$../../../../../key0_B_0$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../baselineThrust_1$
					atmosphereCurve
					{
						key = #$../../../../../key0_B_1$
						key = #$../../../../../key1_B_1$
						key = #$../../../../../key2_B_1$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID2$
			    }

			    DATA
			    {
					maxThrust = #$../../../../baselineThrust_2$
					atmosphereCurve
					{
						key = #$../../../../../key0_B_2$
						key = #$../../../../../key1_B_2$
						key = #$../../../../../key2_B_2$
					}
				}			    
			}
	    }
		
		SUBTYPE
	    {
			name = upgrade
			title = #LOC_KTT_B9TITLE_UPGRADE
			descriptionDetail = #<b>Thrust:</b> $../../thrustASL_U_2$ kN ASL / $../../thrustVac_U_2$ kN Vac.\n<b>Isp:</b> $../../ispASL_U_2$ s ASL / $../../ispVac_U_2$ s Vac.
			addedCost = #$../../addCost_U$
			addedMass = #$../../addMass_U$
			defaultSubtypePriority = 0
			primaryColor = #005528
			secondaryColor = #005528
			upgradeRequired = #$../../kiwiEngineUpgrade1$
			
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID0$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradeThrust_0$
					atmosphereCurve
					{
						key = #$../../../../../key0_U_0$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID1$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradeThrust_1$
					atmosphereCurve
					{
						key = #$../../../../../key0_U_1$
						key = #$../../../../../key1_U_1$
						key = #$../../../../../key2_U_1$
					}
				}			    
			}
			MODULE
			{
			    IDENTIFIER
			    {
					name = ModuleEngines*
					engineID = #$../../../../engineID2$
			    }

			    DATA
			    {
					maxThrust = #$../../../../upgradeThrust_2$
					atmosphereCurve
					{
						key = #$../../../../../key0_U_2$
						key = #$../../../../../key1_U_2$
						key = #$../../../../../key2_U_2$
					}
				}			    
			}
	    }
	}	
}
